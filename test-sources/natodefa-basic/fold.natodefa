# EXPECT-WELL-FORMED
# EXPECT-EVALUATE
# EXPECT-ANALYSIS-LOOKUP-FROM-END ~result {int}
# Note: Test for lists and list destructuring

let rec fold f lst accum =
    match lst with
    | [] -> accum
    | hd :: tl -> f hd (fold f tl accum)
    end
in
let addr n sum = sum + n in
let res = fold addr [1, 2, 3, 4] 0 in
res
