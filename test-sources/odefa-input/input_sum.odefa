# EXPECT-WELL-FORMED
# EXPECT-INPUT-IS 4
# EXPECT-EVALUATES
# EXPECT-INPUT-SEQUENCES-REACH good [ 6 ]

zero = 0;
one = 1;
sumhalf = fun sumself -> (
  sumhalfret = fun sumhalfparam -> (
    sumhalfcond = sumhalfparam == zero;
    sumhalfret2 = sumhalfcond ?
      ( sumhalfcondtrue = 0; ) :
      ( sumhalfselfcall = sumself sumself;
        sumhalfnextparam = sumhalfparam - one;
        sumhalfrecursiveresult = sumhalfselfcall sumhalfnextparam;
        sumhalfresult = sumhalfrecursiveresult + sumhalfparam;
      );
  );
);
sum = sumhalf sumhalf;
num = input;
total = sum num;
target = 20;
condition = total < target;
final = condition ? ( dummy1 = 0; bad = false; ) : ( dummy2 = 0; good = true );
