# EXPECT-WELL-FORMED
# EXPECT-EVALUATE
# EXPECT-ANALYSIS-LOOKUP-FROM-END t_and_f {false, true}
# EXPECT-ANALYSIS-LOOKUP-FROM-END t_or_f {false, true}
# EXPECT-ANALYSIS-LOOKUP-FROM-END t_equal_f {int, false, true}
# EXPECT-ANALYSIS-NO-INCONSISTENCIES

t = true;
f = false;

# `and' and pattern match on `false'.

t_and_f = t and f;

# t_and_f_pattern_match = t_and_f
#                     ? (
#                       t_and_f_antimatch = t t;
#                     )
#                     : (
#                       t_and_f_match = 0;
#                     );

# `or' and pattern match on `true'.

t_or_f = t or f;

# t_or_f_pattern_match = t_or_f
#                    ? (
#                      t_or_f_match = 0;
#                    )
#                    : (
#                      t_or_f_antimatch = t t;
#                    );

# `==' between Boolean values.

t_equal_f = t == f;

# t_equal_f_pattern_match = t_equal_f
#                     ? (
#                       t_equal_f_antimatch = t t;
#                     )
#                     : (
#                       t_equal_f_match = 0;
#                     );

b = true;
# number_pattern_match = b
#                      ? (
#                        number_match = 0;
#                      )
#                      : (
#                        number_antimatch = t t;
#                      );
