# EXPECT-WELL-FORMED
# EXPECT-INPUT-SEQUENCES-REACH target [-2, -1, 18, 0] [-1, 1, 2, 13, 0] [-4, -3, -2, -1, 25, 0] !
# EXPECT-REQUIRED-INPUT-SEQUENCE-GENERATION-STEPS 100000

let none = {last = true} in

let rec gen_list dum = 
  let t = input in
  if 0 == t then
    none
  else
    let nl = gen_list 0 in
    {elem = t, last = false, next = nl}
  in

let rec sum_list lst = 
  if lst.last then
    0
  else
    (lst.elem) + (sum_list (lst.next))
  in

let is_sorted lst =
  if lst.last then
    true
  else
    let rec is_sorted_inner prev lst =
      if lst.last then
        true
      else (
        let ne = lst.elem in
        if prev < ne then
          is_sorted_inner ne (lst.next)
        else
          false)
      in
    is_sorted_inner (lst.elem) (lst.next)
  in

let rec len lst = 
  if lst.last then
    0
  else
    1 + (len (lst.next))
  in

let lst = gen_list 0 in
let l0 = len lst in
if ((3 <= l0) and (l0 <= 5)) and (sum_list lst == 15) and (is_sorted lst) then
  let target = 1 in 1
else
  0