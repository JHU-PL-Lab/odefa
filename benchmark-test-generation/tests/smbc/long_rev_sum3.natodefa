# EXPECT-WELL-FORMED
# EXPECT-INPUT-SEQUENCES-REACH target [ 0 ]

let dummy = 1 in
let none = {last = true} in

let rec gen_list acc = 
  let t = input in
  if 0 == t then
    acc
  else
    let nacc = {elem = t, last = false, next = acc} in
    gen_list nacc
  in

let rec rev_list lst acc =
  if lst.last then
    acc
  else
    let nacc = {elem = (lst.elem), last = false, next = acc} in
    rev_list (lst.next) nacc
  in

let rec eq_list lst0 lst1 =
  if (lst0.last) and (lst1.last) then
    true
  else if (lst0.last) or (lst1.last) then
    false
  else if (lst0.elem) == (lst1.elem) then
    eq_list (lst0.next) (lst1.next)
  else
    false
  in

let rec sum_list lst = 
  if lst.last then
    0
  else
    (lst.elem) + (sum_list (lst.next))
  in

let rec len lst = 
  if lst.last then
    0
  else
    1 + (len (lst.next))
  in

let l0 = gen_list none in
let l1 = rev_list l0 none in
if (len l0 == 2) 
  and (sum_list l0 == 500)
  and (eq_list l0 l1) then
  let target = 1 in 1
else
  0