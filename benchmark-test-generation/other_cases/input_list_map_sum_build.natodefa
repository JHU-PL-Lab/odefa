# EXPECT-WELL-FORMED
# EXPECT-INPUT-SEQUENCES-REACH target [0]
# EXPECT-REQUIRED-INPUT-SEQUENCE-GENERATION-STEPS 20000

let x = input in
let y = input in

let none = {last = true} in

let rec list_build acc = 
  let x = input in
  if 0 == x then
    acc
  else
    let new_acc = {last = false, elem = x, next = acc} in
    list_build new_acc
in

let rec list_map f l =
  let rec lp lst =
    if lst.last then
      lst
    else
      let next_mapped = lp (lst.next) in
      {last = false, elem = f (lst.elem), next = next_mapped}
    in
  lp l
in

let rec sum_list l = 
  if l.last then
    0
  else
    l.elem + (sum_list (l.next))
  in
  
let lst = list_build none in
let s = sum_list lst in

if (s == 10) then
  let target = 1 in 1
else
  0
